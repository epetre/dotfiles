require 'spec_helper' 

describe Syncer do
  let(:user) do 
    user = PivotalUser.create!(:email => "aapetreemanuel@gmail.com", :password => "passpass1") 
    user.preference_sheet.integration_id = ""
    user
  end
  it "returns nil when the user is not valid" do
    user.preference_sheet.integration_id = nil
    user.save(:validate => false)
    Syncer.new.sync
    ActionMailer::Base.deliveries.last.subject.should_not include 'Syncer error'
  end
  
  it "sync does not fetch users with no integration_id" do
    user.save(:validate => false)
    FakePivotal.new.setup_basic_fake_data Fetcher.new(user)
    Syncer.new.sync
    ActionMailer::Base.deliveries.last.subject.should_not include 'Syncer error'
  end

  it "adds a queriable sync report on every sync" do
    user.save(:validate => false)
    FakePivotal.new.setup_basic_fake_data Fetcher.new(user)

    @start = Time.now 
    SyncReport.count.should eq 0
    Syncer.new.sync
    @finish = Time.now 
    
    SyncReport.count.should eq 1
    SyncReport.between(@start, @finish).count.should eq 1
  end
end
