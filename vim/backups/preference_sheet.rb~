class PreferenceSheet < ActiveRecord::Base
  before_validation :before_validation
  attr_accessible :team_integration_id_filter, :user_id, :sync_type, :integration_id, :integration_host
  belongs_to :user

  validates :team_integration_id_filter, :preference_sheet_team_id_filter => true
  validates_with PreferenceSheetValidator, :fields => [:integration_id, :integration_host]

  def before_validation
    #clear integration dependent fields if integration data changed
    self.team_integration_id_filter = nil if integration_host_changed? || integration_id_changed?
  end

  def default_integration_host
    'www.pivotaltracker.com'
  end

  def integration_host
    host = read_attribute :integration_host
    host = default_integration_host if host.blank?
    host
  end

  def team_integration_id_filter= param
    param = param.select{|p| !p.blank?}.to_json if param.class == Array
    self[:team_integration_id_filter] = param 
  end

  def team_integration_id_filter
    val = self[:team_integration_id_filter]
    val ? JSON.parse(val) : [] 
  end

  def token_valid?
    UserData.token_valid? integration_host, integration_id
  end

  def available_team_integration_ids
    @available_ids ||= lambda do
      begin
        projects = Hash.from_xml(RestClient.get "https://#{integration_host}/services/v3/projects", 'X-TrackerToken' => integration_id)['projects']
        projects = projects ? projects.compact : [] 
        return projects.collect{|p| [p['name'], p['id']]} 
      rescue
        return []
      end
    end.call
  end
end
