if Rails.env.development?
  class ErrorsController < ApplicationController
    include  Trackman::Scaffold::ContentSaver
    after_filter :render_content if Rails.env.development?
    
    # ContentSaver defines two class methods for filtering the ouput of your pages
    #
    # Note that it uses nokogiri to parse the output.
    # You can call the methods multiples times if you need, it will stack the calls.
    
    # edit selector, &block 
    # pass a css or xpath selector and a block that will get executed for each result 
    
    # ie:
    # edit "//link[contains(@src 'http://127.0.0.1:3000'))" do |node|
    #   node['src'] = "http://www.production.com"
    # end

    # remove selector[, &predicate]
    # pass a css or xpath selector. You can also pass an optional predicate 
    # to refine the scan instead of trying to make the perfect selector.
    
    # ie:
    # remove 'script' do |node|
    #   node['src'].include?('/assets') && !node['src'].include?('application')
    # end
    
    remove '#page_description, #menu-left, #widget, .footer, .nav, .push'

    edit '#content' do |node|
      node['class'] = node['class'].gsub('span10', 'span12')
    end

    edit 'body' do |node|
      node['class'] = node['class'] ? node['class'] + ' error' : ' error'
    end

    gsub(/http:\/\/(127.0.0.1|localhost):3000/, 'http://burndown-charts.com')

    def not_found
    end

    def error
    end
    
    def maintenance
    end
    
    def maintenance_error
    end
    def test
      raise "TEst error"
    end
  end
end
